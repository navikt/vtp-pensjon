name: Build vtp-pensjon docker image

on:
  push:
    branches:
      - vtp-pensjon-T4    # Push events on master branch
env:
  IMAGE_BASE: ghcr.io/${{ github.repository }}/vtp-pensjon-t4

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set version
        id: version
        shell: bash
        run: |
          if [ -z ${GIT_BRANCH+x} ]; then
              BRANCH=$(git rev-parse --abbrev-ref HEAD)
          else
              BRANCH=$GIT_BRANCH
          fi

          # Replace / with -
          BRANCH=$(echo "$BRANCH" | sed 's/\//-/g' | sed 's/origin-//')

          echo "Branch: $BRANCH"
          if [ $BRANCH = "master" ]; then
             BRANCH_SUFFIX=""
          else
             BRANCH_SUFFIX="-$BRANCH"
          fi

          TIME=$(TZ="Europe/Oslo" date +%Y.%m.%d-%H.%M)
          COMMIT=$(git rev-parse --short=12 HEAD)
          export VERSION="$TIME-$COMMIT$BRANCH_SUFFIX"
          echo "Building version $VERSION"
          echo "::set-env name=VERSION::$VERSION"
          echo "::set-output name=VERSION::$VERSION"
      - uses: actions/cache@v2
        with:
          path: ~/.m2
          key: "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}"
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Set build version
        run: |
          echo "::set-env name=BUILD_VERSION::$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Build artifacts
        shell: bash
        run: |
          mvn clean install --settings maven-settings.xml -Dfile.encoding=UTF-8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build --pull --tag ${IMAGE_BASE}:${VERSION} .
          docker push ${IMAGE_BASE}:${VERSION}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publiser Release Note
        id: create_release
        uses: actions/create-release@v1.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
